<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xi='http://www.w3.org/2001/XInclude'
      xmlns:xlink="http://www.w3.org/1999/xlink"
      version="5.2">
<info>
<mediaobject role="cover">
  <imageobject>
    <imagedata fileref="images/CoffeeFilter.png"/>
  </imageobject>
</mediaobject>
<title>CoffeeFilter</title>
<subtitle>An Invisible XML parser in Java</subtitle>
<author>
  <personname>Norm Tovey-Walsh</personname>
</author>
<copyright><year>2022</year><holder>Norm Tovey-Walsh</holder></copyright>
<productname>coffeepot</productname>
<productnumber>@@VERSION@@</productnumber>
<bibliomisc role="coffeegrinder">@@GRINDERVERSION@@</bibliomisc>
</info>

<preface>
<title>Introduction</title>
<para>CoffeeFilter is an
<link xlink:href="https://invisiblexml.org/">Invisible XML</link> parsing
library.</para>
</preface>

<chapter>
<title>General use</title>

<para>This is just an overview, consult the 
<link xlink:href="/apidoc">JavaDoc</link> for more details.</para>

<programlistingco>
<areaspec>
<area xml:id="ex_parser" coords="10 55"/>
<area xml:id="ex_doc" coords="13 55"/>
<area xml:id="ex_tree" coords="16 55"/>
</areaspec>
<programlisting language="java">String input = "date: s?, day, -s, month, (-s, year)? .\n" +
        "-s: -\" \"+ .\n" +
        "day: digit, digit? .\n" +
        "-digit: \"0\"; \"1\"; \"2\"; \"3\"; \"4\"; \"5\"; \"6\"; \"7\"; \"8\"; \"9\".\n" +
        "month: \"January\"; \"February\"; \"March\"; \"April\";\n" +
        "       \"May\"; \"June\"; \"July\"; \"August\";\n" +
        "       \"September\"; \"October\"; \"November\"; \"December\".\n" +
        "year: ((digit, digit); -\"'\")?, digit, digit .";

InvisibleXmlParser parser
    = new InvisibleXml().getParserFromIxml(input);

InvisibleXmlDocument doc
     = parser.parse("27 Feb 2022");

String result = doc.getTree();
</programlisting>
<calloutlist>
<callout arearefs="ex_parser">
<para>Create a parser. In early versions of this API, the
<classname>InvisibleXml</classname> class had static methods. In version 0.6.0,
that was changed. It must now be instantiated and the <classname>ParserOptions</classname>
to use can be specified.
</para>
</callout>
<callout arearefs="ex_doc">
<para>Parse some input.
</para>
<para>In the case of a failed parse, the <classname>InvisibleXmlDocument</classname>
will also provide details about the failure.</para>
</callout>
<callout arearefs="ex_tree">
<para>Get the XML.
</para>
<para>Several tree models can be constructed and the parse tree can be
sent to any <link xlink:href="http://www.saxproject.org/">SAX</link>
document builder.</para>
</callout>
</calloutlist>
</programlistingco>
</chapter>

</book>
